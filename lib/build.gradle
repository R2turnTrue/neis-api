plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = 'com.leeseojune'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'neis-api'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Neis Api'
                description = 'Supporting to develop KOREA school service'
                url = 'https://github.com/leeseojune53/neis-api'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'leeseojune'
                        name = 'Seojune Lee'
                        email = 'sung07288346@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:svn:http://github.com/'
                    developerConnection = 'scm:svn:https://github.com/'
                    url = 'http://github.com/'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/leeseojune53/neis-api"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useGpgCmd()
    sign(publishing.publications)
}
